/**
 * Generated by chatGPT
 * prompt:
 * can you create a typed mui component using <Card> for a recipe card?
 * provide interface as prop
 * it should display an image, a title, cooking time, difficulty and a dietary tags array
 * It also needsa button "add to meal planner"
 * the card layout remains the same between different viewports
 */
import React from "react";
import {
  Card,
  CardContent,
  CardMedia,
  Typography,
  Box,
  Chip,
  Stack,
  CardActions,
  Divider,
  Button,
} from "@mui/material";
import { Recipe } from "@/types";
import AddRecipeToPlannerModal from "./AddRecipeToPlannerModal";
import RecipeDetailModal from "./RecipeDetailModal";

export interface RecipeCardProps {
  recipe: Recipe;
}

export const RecipeCard = ({ recipe }: RecipeCardProps) => {
  const { image, title, cookingTimeInMin, difficulty, dietaryTags } = recipe;
  return (
    <Card sx={{ width: "100%", height: "100%" }}>
      <CardMedia
        component="img"
        height="180"
        image={image}
        alt={title}
        sx={{ objectFit: "cover" }}
      />
      <CardContent>
        <Typography
          gutterBottom
          variant="h6"
          component="div"
          sx={{ minHeight: "65px" }}
        >
          {title}
        </Typography>
        <Divider sx={{ marginBottom: 2 }} />

        <Box sx={{ display: "flex", gap: 2, mb: 1 }}>
          <Typography variant="body2" color="text.secondary">
            ‚è± {cookingTimeInMin} min
          </Typography>
          <Typography variant="body2" color="text.secondary">
            üí™ {difficulty}
          </Typography>
        </Box>

        <Stack
          direction="row"
          spacing={1}
          flexWrap="wrap"
          mb={2}
          sx={{ minHeight: "50px" }}
        >
          {dietaryTags.map((tag, index) => (
            <Chip key={index} label={tag} size="small" />
          ))}
        </Stack>
      </CardContent>

      <CardActions>
        <AddRecipeToPlannerModal recipe={recipe} />
        <RecipeDetailModal
          recipe={recipe}
          trigger={(openDialog) => (
            <Button
              variant="contained"
              color="primary"
              onClick={openDialog}
              sx={{ width: "100%" }}
            >
              Details
            </Button>
          )}
        />
      </CardActions>
    </Card>
  );
};
